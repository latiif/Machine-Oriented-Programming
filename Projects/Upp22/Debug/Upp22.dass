
./Debug/Upp22.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f804 	bl	20000010 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <main>:
void delay250ns(void);
void delayMicro(unsigned int us);
void delayMilli(unsigned int ms);

void main(void)
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	appInit();
20000014:	f000 f836 	bl	20000084 <appInit>
	while (1)
	{
		*GPIO_ODR_LOW = 0xFF;
20000018:	4b08      	ldr	r3, [pc, #32]	; (2000003c <main+0x2c>)
2000001a:	22ff      	movs	r2, #255	; 0xff
2000001c:	701a      	strb	r2, [r3, #0]
		delayMilli(500);
2000001e:	23fa      	movs	r3, #250	; 0xfa
20000020:	005b      	lsls	r3, r3, #1
20000022:	0018      	movs	r0, r3
20000024:	f000 f80c 	bl	20000040 <delayMilli>
		*GPIO_ODR_LOW = 0x0;
20000028:	4b04      	ldr	r3, [pc, #16]	; (2000003c <main+0x2c>)
2000002a:	2200      	movs	r2, #0
2000002c:	701a      	strb	r2, [r3, #0]
		delayMilli(500);
2000002e:	23fa      	movs	r3, #250	; 0xfa
20000030:	005b      	lsls	r3, r3, #1
20000032:	0018      	movs	r0, r3
20000034:	f000 f804 	bl	20000040 <delayMilli>
		*GPIO_ODR_LOW = 0xFF;
20000038:	e7ee      	b.n	20000018 <main+0x8>
2000003a:	46c0      	nop			; (mov r8, r8)
2000003c:	40021014 	andmi	r1, r2, r4, lsl r0

20000040 <delayMilli>:
}



void delayMilli(unsigned int ms)
{
20000040:	b580      	push	{r7, lr}
20000042:	b084      	sub	sp, #16
20000044:	af00      	add	r7, sp, #0
20000046:	6078      	str	r0, [r7, #4]
		ms = ms / 100;
		ms ++;
	#endif
	
	int i ;
	while (ms--)
20000048:	e011      	b.n	2000006e <delayMilli+0x2e>
	{
		for (i=0;i<1000;i++)
2000004a:	2300      	movs	r3, #0
2000004c:	60fb      	str	r3, [r7, #12]
2000004e:	e00a      	b.n	20000066 <delayMilli+0x26>
		{
			delay250ns();
20000050:	f000 f824 	bl	2000009c <delay250ns>
			delay250ns();
20000054:	f000 f822 	bl	2000009c <delay250ns>
			delay250ns();
20000058:	f000 f820 	bl	2000009c <delay250ns>
			delay250ns();
2000005c:	f000 f81e 	bl	2000009c <delay250ns>
		for (i=0;i<1000;i++)
20000060:	68fb      	ldr	r3, [r7, #12]
20000062:	3301      	adds	r3, #1
20000064:	60fb      	str	r3, [r7, #12]
20000066:	68fb      	ldr	r3, [r7, #12]
20000068:	4a05      	ldr	r2, [pc, #20]	; (20000080 <delayMilli+0x40>)
2000006a:	4293      	cmp	r3, r2
2000006c:	ddf0      	ble.n	20000050 <delayMilli+0x10>
	while (ms--)
2000006e:	687b      	ldr	r3, [r7, #4]
20000070:	1e5a      	subs	r2, r3, #1
20000072:	607a      	str	r2, [r7, #4]
20000074:	2b00      	cmp	r3, #0
20000076:	d1e8      	bne.n	2000004a <delayMilli+0xa>
		}
	}
}
20000078:	46c0      	nop			; (mov r8, r8)
2000007a:	46bd      	mov	sp, r7
2000007c:	b004      	add	sp, #16
2000007e:	bd80      	pop	{r7, pc}
20000080:	000003e7 	andeq	r0, r0, r7, ror #7

20000084 <appInit>:

void appInit(void)
{
20000084:	b580      	push	{r7, lr}
20000086:	af00      	add	r7, sp, #0
	#ifdef USBDM
		*((unsigned long *) 0x40023830) = 0x18;
		___asm volatile ("LDR R0,=0x8000209\n BLX R0 \n");
	#endif
	
	*GPIO_MODER = 0x00005555;
20000088:	4b02      	ldr	r3, [pc, #8]	; (20000094 <appInit+0x10>)
2000008a:	4a03      	ldr	r2, [pc, #12]	; (20000098 <appInit+0x14>)
2000008c:	601a      	str	r2, [r3, #0]
	
}
2000008e:	46c0      	nop			; (mov r8, r8)
20000090:	46bd      	mov	sp, r7
20000092:	bd80      	pop	{r7, pc}
20000094:	40021000 	andmi	r1, r2, r0
20000098:	00005555 	andeq	r5, r0, r5, asr r5

2000009c <delay250ns>:

void delay250ns(void)
{
2000009c:	b580      	push	{r7, lr}
2000009e:	af00      	add	r7, sp, #0
	*STK_CTRL = 0;
200000a0:	4b0c      	ldr	r3, [pc, #48]	; (200000d4 <delay250ns+0x38>)
200000a2:	2200      	movs	r2, #0
200000a4:	601a      	str	r2, [r3, #0]
	*STK_LOAD = (( 168/4) -1);
200000a6:	4b0c      	ldr	r3, [pc, #48]	; (200000d8 <delay250ns+0x3c>)
200000a8:	2229      	movs	r2, #41	; 0x29
200000aa:	601a      	str	r2, [r3, #0]
	
	*STK_VAL = 0;
200000ac:	4b0b      	ldr	r3, [pc, #44]	; (200000dc <delay250ns+0x40>)
200000ae:	2200      	movs	r2, #0
200000b0:	601a      	str	r2, [r3, #0]
	*STK_CTRL=5;
200000b2:	4b08      	ldr	r3, [pc, #32]	; (200000d4 <delay250ns+0x38>)
200000b4:	2205      	movs	r2, #5
200000b6:	601a      	str	r2, [r3, #0]
	
	while ((*STK_CTRL & 0x10000)==0)
200000b8:	46c0      	nop			; (mov r8, r8)
200000ba:	4b06      	ldr	r3, [pc, #24]	; (200000d4 <delay250ns+0x38>)
200000bc:	681a      	ldr	r2, [r3, #0]
200000be:	2380      	movs	r3, #128	; 0x80
200000c0:	025b      	lsls	r3, r3, #9
200000c2:	4013      	ands	r3, r2
200000c4:	d0f9      	beq.n	200000ba <delay250ns+0x1e>
	{}
	
	*STK_CTRL=0;
200000c6:	4b03      	ldr	r3, [pc, #12]	; (200000d4 <delay250ns+0x38>)
200000c8:	2200      	movs	r2, #0
200000ca:	601a      	str	r2, [r3, #0]
}
200000cc:	46c0      	nop			; (mov r8, r8)
200000ce:	46bd      	mov	sp, r7
200000d0:	bd80      	pop	{r7, pc}
200000d2:	46c0      	nop			; (mov r8, r8)
200000d4:	e000e010 	and	lr, r0, r0, lsl r0
200000d8:	e000e014 	and	lr, r0, r4, lsl r0
200000dc:	e000e018 	and	lr, r0, r8, lsl r0

200000e0 <delayMicro>:


void delayMicro(unsigned int us)
{
200000e0:	b580      	push	{r7, lr}
200000e2:	b082      	sub	sp, #8
200000e4:	af00      	add	r7, sp, #0
200000e6:	6078      	str	r0, [r7, #4]
	while (us--)
200000e8:	e007      	b.n	200000fa <delayMicro+0x1a>
	{
		delay250ns();
200000ea:	f7ff ffd7 	bl	2000009c <delay250ns>
		delay250ns();
200000ee:	f7ff ffd5 	bl	2000009c <delay250ns>
		delay250ns();
200000f2:	f7ff ffd3 	bl	2000009c <delay250ns>
		delay250ns();
200000f6:	f7ff ffd1 	bl	2000009c <delay250ns>
	while (us--)
200000fa:	687b      	ldr	r3, [r7, #4]
200000fc:	1e5a      	subs	r2, r3, #1
200000fe:	607a      	str	r2, [r7, #4]
20000100:	2b00      	cmp	r3, #0
20000102:	d1f2      	bne.n	200000ea <delayMicro+0xa>
	}
20000104:	46c0      	nop			; (mov r8, r8)
20000106:	46bd      	mov	sp, r7
20000108:	b002      	add	sp, #8
2000010a:	bd80      	pop	{r7, pc}

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000000c2 	andeq	r0, r0, r2, asr #1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000052 	andeq	r0, r0, r2, asr r0
  10:	00000d0c 	andeq	r0, r0, ip, lsl #26
	...
  20:	00ea0200 	rsceq	r0, sl, r0, lsl #4
  24:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
  28:	200000e0 	andcs	r0, r0, r0, ror #1
  2c:	0000002c 	andeq	r0, r0, ip, lsr #32
  30:	00449c01 	subeq	r9, r4, r1, lsl #24
  34:	75030000 	strvc	r0, [r3, #-0]
  38:	6e010073 	mcrvs	0, 0, r0, cr1, cr3, {3}
  3c:	00000044 	andeq	r0, r0, r4, asr #32
  40:	00749102 	rsbseq	r9, r4, r2, lsl #2
  44:	00070404 	andeq	r0, r7, r4, lsl #8
  48:	05000000 	streq	r0, [r0, #-0]
  4c:	00000100 	andeq	r0, r0, r0, lsl #2
  50:	009c5f01 	addseq	r5, ip, r1, lsl #30
  54:	00442000 	subeq	r2, r4, r0
  58:	9c010000 	stcls	0, cr0, [r1], {-0}
  5c:	00004505 	andeq	r4, r0, r5, lsl #10
  60:	84530100 	ldrbhi	r0, [r3], #-256	; 0xffffff00
  64:	18200000 	stmdane	r0!, {}	; <UNPREDICTABLE>
  68:	01000000 	mrseq	r0, (UNDEF: 0)
  6c:	00f5029c 	smlalseq	r0, r5, ip, r2
  70:	3f010000 	svccc	0x00010000
  74:	20000040 	andcs	r0, r0, r0, asr #32
  78:	00000044 	andeq	r0, r0, r4, asr #32
  7c:	009c9c01 	addseq	r9, ip, r1, lsl #24
  80:	6d030000 	stcvs	0, cr0, [r3, #-0]
  84:	3f010073 	svccc	0x00010073
  88:	00000044 	andeq	r0, r0, r4, asr #32
  8c:	066c9102 	strbteq	r9, [ip], -r2, lsl #2
  90:	46010069 	strmi	r0, [r1], -r9, rrx
  94:	0000009c 	muleq	r0, ip, r0
  98:	00749102 	rsbseq	r9, r4, r2, lsl #2
  9c:	69050407 	stmdbvs	r5, {r0, r1, r2, sl}
  a0:	0800746e 	stmdaeq	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
  a4:	0000004d 	andeq	r0, r0, sp, asr #32
  a8:	00103101 	andseq	r3, r0, r1, lsl #2
  ac:	00302000 	eorseq	r2, r0, r0
  b0:	9c010000 	stcls	0, cr0, [r1], {-0}
  b4:	00003d05 	andeq	r3, r0, r5, lsl #26
  b8:	00210100 	eoreq	r0, r1, r0, lsl #2
  bc:	0c200000 	stceq	0, cr0, [r0], #-0
  c0:	01000000 	mrseq	r0, (UNDEF: 0)
  c4:	Address 0x000000c4 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	012e0200 			; <UNDEFINED> instruction: 0x012e0200
  14:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	01111927 	tsteq	r1, r7, lsr #18
  20:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  24:	01194296 			; <UNDEFINED> instruction: 0x01194296
  28:	03000013 	movweq	r0, #19
  2c:	08030005 	stmdaeq	r3, {r0, r2}
  30:	0b3b0b3a 	bleq	ec2d20 <startup-0x1f13d2e0>
  34:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  38:	24040000 	strcs	r0, [r4], #-0
  3c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  40:	000e030b 	andeq	r0, lr, fp, lsl #6
  44:	002e0500 	eoreq	r0, lr, r0, lsl #10
  48:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  4c:	0b3b0b3a 	bleq	ec2d3c <startup-0x1f13d2c4>
  50:	01111927 	tsteq	r1, r7, lsr #18
  54:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  58:	00194297 	mulseq	r9, r7, r2
  5c:	00340600 	eorseq	r0, r4, r0, lsl #12
  60:	0b3a0803 	bleq	e82074 <startup-0x1f17df8c>
  64:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  68:	00001802 	andeq	r1, r0, r2, lsl #16
  6c:	0b002407 	bleq	9090 <startup-0x1fff6f70>
  70:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  74:	08000008 	stmdaeq	r0, {r3}
  78:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  7c:	0b3a0e03 	bleq	e83890 <startup-0x1f17c770>
  80:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  84:	06120111 			; <UNDEFINED> instruction: 0x06120111
  88:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  8c:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000000fc 	strdeq	r0, [r0], -ip
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	2000010c 	andcs	r0, r0, ip, lsl #2
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000c9 	andeq	r0, r0, r9, asr #1
   4:	00460002 	subeq	r0, r6, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	69726873 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, fp, sp, lr}^
  28:	442f6661 	strtmi	r6, [pc], #-1633	; 30 <startup-0x1fffffd0>
  2c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
  30:	73746e65 	cmnvc	r4, #1616	; 0x650
  34:	62614c2f 	rsbvs	r4, r1, #12032	; 0x2f00
  38:	552f3262 	strpl	r3, [pc, #-610]!	; fffffdde <delayMicro+0xdffffcfe>
  3c:	32327070 	eorscc	r7, r2, #112	; 0x70
  40:	74730000 	ldrbtvc	r0, [r3], #-0
  44:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  48:	00632e70 	rsbeq	r2, r3, r0, ror lr
  4c:	00000001 	andeq	r0, r0, r1
  50:	00020500 	andeq	r0, r2, r0, lsl #10
  54:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  58:	5e130121 	mufplsp	f0, f3, f1
  5c:	01000302 	tsteq	r0, r2, lsl #6
  60:	02050001 	andeq	r0, r5, #1
  64:	20000010 	andcs	r0, r0, r0, lsl r0
  68:	2f013103 	svccs	0x00013103
  6c:	01040200 	mrseq	r0, R12_usr
  70:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
  74:	02003d01 	andeq	r3, r0, #1, 26	; 0x40
  78:	00590104 	subseq	r0, r9, r4, lsl #2
  7c:	3d010402 	cfstrscc	mvf0, [r1, #-8]
  80:	01040200 	mrseq	r0, R12_usr
  84:	4a0a0355 	bmi	280de0 <startup-0x1fd7f220>
  88:	02002251 	andeq	r2, r0, #268435461	; 0x10000005
  8c:	003e0304 	eorseq	r0, lr, r4, lsl #6
  90:	2f030402 	svccs	0x00030402
  94:	03040200 	movweq	r0, #16896	; 0x4200
  98:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
  9c:	02002f03 	andeq	r2, r0, #3, 30
  a0:	00290304 	eoreq	r0, r9, r4, lsl #6
  a4:	06010402 	streq	r0, [r1], -r2, lsl #8
  a8:	0348063c 	movteq	r0, #34364	; 0x863c
  ac:	3569580a 	strbcc	r5, [r9, #-2058]!	; 0xfffff7f6
  b0:	3d2f773e 	stccc	7, cr7, [pc, #-248]!	; ffffffc0 <delayMicro+0xdffffee0>
  b4:	003e3d3e 	eorseq	r3, lr, lr, lsr sp
  b8:	06010402 	streq	r0, [r1], -r2, lsl #8
  bc:	3d690620 	stclcc	6, cr0, [r9, #-128]!	; 0xffffff80
  c0:	2f224ba2 	svccs	0x00224ba2
  c4:	5f292f2f 	svcpl	0x00292f2f
  c8:	01000402 	tsteq	r0, r2, lsl #8
  cc:	Address 0x000000cc is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
   4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
   8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
   c:	2f3a4300 	svccs	0x003a4300
  10:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
  14:	68732f73 	ldmdavs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
  18:	66616972 			; <UNDEFINED> instruction: 0x66616972
  1c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
  20:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
  24:	4c2f7374 	stcmi	3, cr7, [pc], #-464	; fffffe5c <delayMicro+0xdffffd7c>
  28:	32626261 	rsbcc	r6, r2, #268435462	; 0x10000006
  2c:	7070552f 	rsbsvc	r5, r0, pc, lsr #10
  30:	732f3232 			; <UNDEFINED> instruction: 0x732f3232
  34:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  38:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  3c:	61747300 	cmnvs	r4, r0, lsl #6
  40:	70757472 	rsbsvc	r7, r5, r2, ror r4
  44:	70706100 	rsbsvc	r6, r0, r0, lsl #2
  48:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
  4c:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
  50:	4e47006e 	cdpmi	0, 4, cr0, cr7, cr14, {3}
  54:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
  58:	2e362039 	mrccs	0, 1, r2, cr6, cr9, {1}
  5c:	20312e33 	eorscs	r2, r1, r3, lsr lr
  60:	37313032 			; <UNDEFINED> instruction: 0x37313032
  64:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  68:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  6c:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  70:	5b202965 	blpl	80a60c <startup-0x1f7f59f4>
  74:	2f4d5241 	svccs	0x004d5241
  78:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  7c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  80:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  84:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  88:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  8c:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  90:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  94:	31353534 	teqcc	r5, r4, lsr r5
  98:	2d205d32 	stccs	13, cr5, [r0, #-200]!	; 0xffffff38
  9c:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  a0:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  a4:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  a8:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  ac:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  b0:	6d2d206d 	stcvs	0, cr2, [sp, #-436]!	; 0xfffffe4c
  b4:	616f6c66 	cmnvs	pc, r6, ror #24
  b8:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
  bc:	6f733d69 	svcvs	0x00733d69
  c0:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
  c4:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
  c8:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
  cc:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
  d0:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
  d4:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
  d8:	672d206d 	strvs	r2, [sp, -sp, rrx]!
  dc:	304f2d20 	subcc	r2, pc, r0, lsr #26
  e0:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
  e4:	39633d64 	stmdbcc	r3!, {r2, r5, r6, r8, sl, fp, ip, sp}^
  e8:	65640039 	strbvs	r0, [r4, #-57]!	; 0xffffffc7
  ec:	4d79616c 	ldfmie	f6, [r9, #-432]!	; 0xfffffe50
  f0:	6f726369 	svcvs	0x00726369
  f4:	6c656400 	cfstrdvs	mvd6, [r5], #-0
  f8:	694d7961 	stmdbvs	sp, {r0, r5, r6, r8, fp, ip, sp, lr}^
  fc:	00696c6c 	rsbeq	r6, r9, ip, ror #24
 100:	616c6564 	cmnvs	ip, r4, ror #10
 104:	30353279 	eorscc	r3, r5, r9, ror r2
 108:	Address 0x00000108 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000030 	andeq	r0, r0, r0, lsr r0
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000040 	andcs	r0, r0, r0, asr #32
  48:	00000044 	andeq	r0, r0, r4, asr #32
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	180e4101 	stmdane	lr, {r0, r8, lr}
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	20000084 	andcs	r0, r0, r4, lsl #1
  68:	00000018 	andeq	r0, r0, r8, lsl r0
  6c:	40080e41 	andmi	r0, r8, r1, asr #28
  70:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  74:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  78:	00000018 	andeq	r0, r0, r8, lsl r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	2000009c 	mulcs	r0, ip, r0
  84:	00000044 	andeq	r0, r0, r4, asr #32
  88:	40080e41 	andmi	r0, r8, r1, asr #28
  8c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  90:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  94:	0000001c 	andeq	r0, r0, ip, lsl r0
  98:	00000000 	andeq	r0, r0, r0
  9c:	200000e0 	andcs	r0, r0, r0, ror #1
  a0:	0000002c 	andeq	r0, r0, ip, lsr #32
  a4:	40080e41 	andmi	r0, r8, r1, asr #28
  a8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  ac:	100e4101 	andne	r4, lr, r1, lsl #2
  b0:	00070d41 	andeq	r0, r7, r1, asr #26
